# Generated by Django 4.2.10 on 2024-08-10 09:22

from django.conf import settings
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[(1, 'AdminHOD')], default=1, max_length=15)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdminHOD',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClassAttendance',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('attendance_date', models.DateField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClassFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee_type', models.CharField(choices=[('registration', 'Registration'), ('boarding', 'Boarding')], max_length=20)),
                ('fee_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClassLevel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('class_name', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExamMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_marks', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, null=True)),
                ('average', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, null=True)),
                ('grade', models.CharField(blank=True, max_length=1, null=True)),
                ('remark', models.CharField(blank=True, max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExamType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Expenditure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date', models.DateField()),
                ('category', models.CharField(choices=[('Salary', 'Salary'), ('Utilities', 'Utilities'), ('Supplies', 'Supplies'), ('Maintenance', 'Maintenance'), ('Other', 'Other')], default='Other', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='FeedBackStaff',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('feedback', models.CharField(max_length=255)),
                ('feedback_reply', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeePayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('amount_remaining', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10)),
                ('payment_status', models.CharField(choices=[('Pending', 'Pending'), ('Incomplete', 'Incomplete'), ('Completed', 'Completed')], default='Pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeeStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_fee_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LeaveReportStaffs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('leave_date', models.DateTimeField(auto_now_add=True)),
                ('leave_message', models.TextField()),
                ('leave_status', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='MadrasatulFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='MadrasatulFeePayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('amount_remaining', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('payment_status', models.CharField(choices=[('Pending', 'Pending'), ('Incomplete', 'Incomplete'), ('Completed', 'Completed')], default='Pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.DecimalField(decimal_places=2, max_digits=5)),
                ('date_of_exam', models.DateField()),
                ('total_marks', models.DecimalField(blank=True, decimal_places=2, default=100, max_digits=5, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SchoolFeesInstallment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('installment_name', models.CharField(max_length=100)),
                ('amount_required', models.DecimalField(decimal_places=2, max_digits=10)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='SchoolFeesPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_remaining', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date_paid', models.DateField()),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('payment_status', models.CharField(choices=[('Pending', 'Pending'), ('Incomplete', 'Incomplete'), ('Completed', 'Completed')], default='Pending', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Staffs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('middle_name', models.CharField(blank=True, max_length=100)),
                ('address', models.TextField(blank=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('date_of_birth', models.DateField(blank=True, default='2000-01-01')),
                ('date_of_employment', models.DateField(blank=True, default='2000-01-01')),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('branch', models.CharField(blank=True, choices=[('Uwanja wa Ndege', 'Uwanja wa Ndege'), ('Chukwani', 'Chukwani')], max_length=20)),
                ('staff_role', models.CharField(choices=[('Academic', 'Academic'), ('Headmaster', 'Headmaster'), ('Admin', 'Admin'), ('Class Teacher', 'Class Teacher'), ('Accountant', 'Accountant')], default='staff', max_length=20)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='staff_profile_pic')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentClassAttendance',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentExamInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('division', models.CharField(blank=True, max_length=50, null=True)),
                ('total_grade_points', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, null=True)),
                ('best_subjects', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentPositionInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('registration_number', models.CharField(blank=True, max_length=30, unique=True)),
                ('examination_number', models.CharField(blank=True, max_length=30, null=True)),
                ('previously_examination_number', models.CharField(blank=True, max_length=30, null=True)),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('physical_disabilities_condition', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('first_phone_number', models.CharField(max_length=10)),
                ('second_phone_number', models.CharField(blank=True, max_length=10, null=True)),
                ('fee_payer_number', models.CharField(blank=True, max_length=10, null=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('branch', models.CharField(blank=True, choices=[('Uwanja wa Ndege', 'Uwanja wa Ndege'), ('Chukwani', 'Chukwani')], max_length=20)),
                ('profile_pic', models.FileField(blank=True, null=True, upload_to='student_profile_pic')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('subject_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SujbectWiseResults',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('history_score', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, null=True)),
                ('english_score', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, null=True)),
                ('kiswahili_score', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, null=True)),
                ('geography_score', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, null=True)),
                ('mathematics_score', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, null=True)),
                ('physics_score', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, null=True)),
                ('arabic_score', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, null=True)),
                ('biology_score', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, null=True)),
                ('chemistry_score', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, null=True)),
                ('edk_score', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, null=True)),
                ('civics_score', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, null=True)),
                ('computer_application_score', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, null=True)),
                ('commerce_score', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, null=True)),
                ('book_keeping_score', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, null=True)),
                ('date_of_exam', models.DateField(auto_now=True)),
                ('class_level', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TransportFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=100, unique=True)),
                ('fee_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TransportFeePayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amount_remaining', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('payment_status', models.CharField(choices=[('Pending', 'Pending'), ('Incomplete', 'Incomplete'), ('Completed', 'Completed')], default='Pending', max_length=10)),
                ('payment_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='result_module.students')),
                ('transport_fee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='result_module.transportfee')),
            ],
        ),
        migrations.AddConstraint(
            model_name='transportfee',
            constraint=models.UniqueConstraint(fields=('location', 'fee_amount'), name='unique_transportfee'),
        ),
        migrations.AddField(
            model_name='sujbectwiseresults',
            name='exam_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='result_module.examtype'),
        ),
        migrations.AddField(
            model_name='sujbectwiseresults',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='result_module.students'),
        ),
        migrations.AddField(
            model_name='subject',
            name='class_level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='result_module.classlevel'),
        ),
        migrations.AddField(
            model_name='students',
            name='class_level',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='students', to='result_module.classlevel'),
        ),
        migrations.AddField(
            model_name='students',
            name='services',
            field=models.ManyToManyField(blank=True, to='result_module.service'),
        ),
        migrations.AddField(
            model_name='studentpositioninfo',
            name='class_level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='studentepositioninfo', to='result_module.classlevel'),
        ),
        migrations.AddField(
            model_name='studentpositioninfo',
            name='exam_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='result_module.examtype'),
        ),
        migrations.AddField(
            model_name='studentpositioninfo',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='result_module.students'),
        ),
        migrations.AddField(
            model_name='studentexaminfo',
            name='class_level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='studentexaminfo', to='result_module.classlevel'),
        ),
        migrations.AddField(
            model_name='studentexaminfo',
            name='exam_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='result_module.examtype'),
        ),
        migrations.AddField(
            model_name='studentexaminfo',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='result_module.students'),
        ),
        migrations.AddField(
            model_name='studentclassattendance',
            name='attendance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='result_module.classattendance'),
        ),
        migrations.AddField(
            model_name='studentclassattendance',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='result_module.students'),
        ),
        migrations.AddField(
            model_name='staffs',
            name='admin',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='schoolfeespayment',
            name='installment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='result_module.schoolfeesinstallment'),
        ),
        migrations.AddField(
            model_name='schoolfeespayment',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='result_module.students'),
        ),
        migrations.AddField(
            model_name='schoolfeesinstallment',
            name='class_level',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='installments', to='result_module.classlevel'),
        ),
        migrations.AddField(
            model_name='result',
            name='class_level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student', to='result_module.classlevel'),
        ),
        migrations.AddField(
            model_name='result',
            name='exam_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='result_module.examtype'),
        ),
        migrations.AddField(
            model_name='result',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='result_module.students'),
        ),
        migrations.AddField(
            model_name='result',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='result_module.subject'),
        ),
        migrations.AddField(
            model_name='madrasatulfeepayment',
            name='matrasatul_fee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='result_module.madrasatulfee'),
        ),
        migrations.AddField(
            model_name='madrasatulfeepayment',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='result_module.students'),
        ),
        migrations.AddField(
            model_name='madrasatulfee',
            name='class_level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='result_module.classlevel'),
        ),
        migrations.AddField(
            model_name='leavereportstaffs',
            name='staff_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='result_module.staffs'),
        ),
        migrations.AddField(
            model_name='feestructure',
            name='class_level',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='fee_structures', to='result_module.classlevel'),
        ),
        migrations.AddField(
            model_name='feepayment',
            name='class_fee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='result_module.classfee'),
        ),
        migrations.AddField(
            model_name='feepayment',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='result_module.students'),
        ),
        migrations.AddField(
            model_name='feedbackstaff',
            name='staff_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='result_module.staffs'),
        ),
        migrations.AddField(
            model_name='exammetrics',
            name='class_level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='studentemetrics', to='result_module.classlevel'),
        ),
        migrations.AddField(
            model_name='exammetrics',
            name='exam_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='result_module.examtype'),
        ),
        migrations.AddField(
            model_name='exammetrics',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='result_module.students'),
        ),
        migrations.AddField(
            model_name='classfee',
            name='class_level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='result_module.classlevel'),
        ),
        migrations.AddField(
            model_name='classattendance',
            name='class_level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='result_module.classlevel'),
        ),
        migrations.AddField(
            model_name='adminhod',
            name='admin',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='admin_hod', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='customuser_groups', related_query_name='user', to='auth.group', verbose_name='Groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_user_permissions', related_query_name='user', to='auth.permission', verbose_name='User permissions'),
        ),
        migrations.AddConstraint(
            model_name='subject',
            constraint=models.UniqueConstraint(fields=('subject_name', 'class_level'), name='unique_subject_per_class_level'),
        ),
        migrations.AddConstraint(
            model_name='students',
            constraint=models.UniqueConstraint(fields=('first_name', 'middle_name', 'last_name'), name='unique_student'),
        ),
        migrations.AddConstraint(
            model_name='schoolfeesinstallment',
            constraint=models.UniqueConstraint(fields=('installment_name', 'class_level'), name='unique_installment_name_per_class_level'),
        ),
        migrations.AddConstraint(
            model_name='madrasatulfee',
            constraint=models.UniqueConstraint(fields=('class_level', 'fee_amount'), name='unique_madrasatulfee_per_class_level'),
        ),
        migrations.AddConstraint(
            model_name='classfee',
            constraint=models.UniqueConstraint(fields=('class_level', 'fee_type'), name='unique_classfee_per_class_level'),
        ),
    ]
